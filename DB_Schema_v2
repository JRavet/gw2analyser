DROP DATABASE Gw2Analyserv2;
CREATE DATABASE Gw2Analyserv2;
USE Gw2Analyserv2;

CREATE TABLE objectives
(
 obj_id varchar(10),
 name varchar(40),
 ppt_base int(2),
 type varchar(10),
 sector_id varchar(8),
 map_id varchar(8),
 map_type varchar(50),
 coordX float(8,2),
 coordY float(8,2),
 coordZ float(8,2),
 label_coordX float(8,2),
 label_coordY float(8,2),
 marker varchar(255), 
 compass_direction varchar(5),
 chat_link varchar(20),
 PRIMARY KEY (obj_id)
);

CREATE TABLE guild
(
 guild_id varchar(60),
 emblem_last_updated datetime,
 name varchar(60),
 tag varchar(10),
 PRIMARY KEY(guild_id)
);

CREATE TABLE guild_emblem
(
 guild_id varchar(60),
 background_id int(5),
 foreground_id int(5),
 flags varchar(255),
 background_color_id int(5),
 foreground_primary_color_id int(5),
 foreground_secondary_color_id int(5),
 PRIMARY KEY(guild_id,background_id, foreground_id, flags),
 FOREIGN KEY (guild_id) REFERENCES guild (guild_id)
 	ON DELETE CASCADE
);

CREATE TABLE server_info
(
 server_id int(4),
 name varchar(60),
 abbreviation varchar(5),
 PRIMARY KEY(server_id)
);

CREATE TABLE match_details
(
 match_id varchar(4),
 week_num int(3),
 start_time datetime,
 end_time datetime,
 PRIMARY KEY(match_id,start_time)
);

CREATE TABLE map_scores
(
 timeStamp datetime,
 match_id varchar(4),
 start_time datetime,
 map_id enum("RedHome","BlueHome","GreenHome","Center"),
 greenScore int(6),
 blueScore int(6),
 redScore int(6),
 greenKills int(4),
 blueKills int(4),
 redKills int(4),
 greenDeaths int(4),
 blueDeaths int(4),
 redDeaths int(4),
 green_ppt int(3),
 blue_ppt int(3),
 red_ppt int(3),
 PRIMARY KEY(timeStamp,match_id,start_time,map_id),
 FOREIGN KEY(match_id,start_time) references match_details(match_id,start_time)
 ON DELETE CASCADE
);

CREATE TABLE skirmish_scores
(
	match_id varchar(4),
	match_start datetime,
	timeStamp datetime,
	skirmish_number int(2),
	red_skirmish_score int(3),
	blue_skirmish_score int(3),
	green_skirmish_score int(3),
	PRIMARY KEY(match_id,match_start,timeStamp),
	FOREIGN KEY(match_id,match_start) REFERENCES match_details(match_id,start_time)
		ON DELETE CASCADE
);

CREATE TABLE guild_upgrade
(
  id int(4),
  name varchar(64),
  description text,
  build_time int(3),
  icon text,
  PRIMARY KEY(id)
);

CREATE TABLE activity_data
(
 id int(11) unsigned AUTO_INCREMENT,
 timeStamp datetime,
 last_flipped datetime,
 obj_id  varchar(10),
 owner_server int(4),
 tick_timer float(3,1),
 owner_color enum("Blue","Red","Green","Neutral"),
 claimed_by varchar(60),
 claimed_at datetime,
 match_id varchar(4),
 start_time datetime,
 num_yaks_est int(3),
 tier int(1),
 num_yaks int(3),
 duration_owned time,
 duration_claimed time,
 PRIMARY KEY(id),
 FOREIGN KEY(match_id,start_time) references match_details(match_id,start_time)
 ON DELETE CASCADE,
 FOREIGN KEY(owner_server) references server_info(server_id)
 ON DELETE CASCADE,
 FOREIGN KEY(claimed_by) references guild(guild_id)
 ON UPDATE CASCADE
 ON DELETE CASCADE,
 FOREIGN KEY(obj_id) REFERENCES objectives(obj_id)
);

CREATE TABLE objective_state_upgrade
(
  id int(11) unsigned AUTO_INCREMENT,
  timeStamp datetime,
  activity_data_id int(11) unsigned,
  guild_upgrade_id int(4),
  FOREIGN KEY(guild_upgrade_id) REFERENCES guild_upgrade(id)
  ON DELETE CASCADE,
  FOREIGN KEY(activity_data_id) REFERENCES activity_data(id)
  ON DELETE CASCADE,
  PRIMARY KEY (id)
);

CREATE TABLE server_linkings
(
 match_start datetime,
 match_id varchar(4),
 server_id int(4),
 server_color enum("Red","Blue","Green"),
 server_lead boolean,
 server_population varchar(15),
 PRIMARY KEY(match_start, match_id, server_id),
 FOREIGN KEY(match_id, match_start) REFERENCES match_details(match_id, start_time)
 ON DELETE CASCADE,
 FOREIGN KEY(server_id) REFERENCES server_info(server_id)
);

CREATE TABLE log_codes
(
 id int(11),
 type varchar(100),
 message varchar(255),
 PRIMARY KEY (id)
);

CREATE TABLE supply_routes
(
	from_obj varchar(10),
	to_obj varchar(10),
	estimated_travel_time float(3,1),
	PRIMARY KEY (from_obj, to_obj),
	FOREIGN KEY (from_obj) REFERENCES objectives(obj_id)
		ON DELETE CASCADE,
	FOREIGN KEY (to_obj) REFERENCES objectives(obj_id)
		ON DELETE CASCADE
);

CREATE USER 'gw2analyser'@'localhost' IDENTIFIED BY 'themirrorimage';
GRANT SELECT
ON Gw2Analyserv2.*
TO 'gw2analyser'@'localhost';
CREATE USER 'gw2datacollector'@'localhost' IDENTIFIED BY 'egamirrorimeht';
GRANT SELECT, INSERT, UPDATE
ON Gw2Analyserv2.*
TO 'gw2datacollector'@'localhost';
CREATE USER 'gw2admin'@'localhost' IDENTIFIED BY 'J0rDa1n';
GRANT SELECT, INSERT, UPDATE, CREATE, DROP, ALTER, DELETE
ON Gw2Analyserv2.*
TO 'gw2admin'@'localhost';
